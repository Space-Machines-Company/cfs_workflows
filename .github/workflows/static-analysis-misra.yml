name: Static Analysis with MISRA

# Run this workflow manually from the Actions tab
on:
  workflow_call:

jobs:
  #Checks for duplicate actions. Skips push actions if there is a matching or duplicate pull-request action.
  check-for-duplicates:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
        should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          concurrent_skipping: 'same_content'
          skip_after_successful_duplicate: 'true'
          do_not_skip: '["pull_request", "workflow_dispatch", "schedule"]'
          
  misra-analysis:
    #Continue if check-for-duplicates found no duplicates. Always runs for pull-requests.
    needs: check-for-duplicates
    if: ${{ needs.check-for-duplicates.outputs.should_skip != 'true' }}
    name: Run cppcheck with misra
    runs-on: ubuntu-latest

    steps:
      - uses: mercari/github-app-token-generator@v1
        id: get-token
        with:
          app-private-key: ${{ secrets.CFS_KEY }}
          app-id: ${{ secrets.CFS_APP_ID }}
          app-installation-id: ${{ secrets.CFS_INSTALLATION_ID}}

      - name: Install cppcheck
        run: sudo apt-get install cppcheck -y

        # Checks out a copy of the cfs bundle
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          token: ${{ steps.get-token.outputs.token }}

      - name: get MISRA addon
        run: |
            sudo apt-get install git -y
            git clone https://github.com/danmar/cppcheck.git
            cp cppcheck/addons/misra.py misra.py
            cp cppcheck/addons/cppcheckdata.py cppcheckdata.py
            cp cppcheck/addons/misra_9.py misra_9.py
  
      - name: Run bundle cppcheck
        run: |
          ls
          cd ${{ github.event.repository.name }}
          cppcheck --addon=misra --force --inline-suppr --std=c99 --language=c --enable=warning,performance,portability,style --quiet . 2> ${{matrix.cppcheck}}_cppcheck_err.txt
            
      - name: Archive Static Analysis Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{matrix.cppcheck}}-cppcheck-err
          path: ./*cppcheck_err.txt

      - name: Check for errors
        run: |
          if [[ -s ${{matrix.cppcheck}}_cppcheck_err.txt ]];
          then
            cat ${{matrix.cppcheck}}_cppcheck_err.txt
            exit -1
          fi
